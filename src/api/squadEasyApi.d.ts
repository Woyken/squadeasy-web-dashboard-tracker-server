/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/2.0/my/image": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["User_uploadImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/my/ranking/global": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Ranking_rankingGlobal"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/my/ranking/season": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Ranking_rankingSeason"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/my/team": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["TeamService_myTeam"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/my/user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_user"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch: operations["User_updateUser"];
        trace?: never;
    };
    "/api/2.0/socialTags/list": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Social_getSocialTags"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/teams": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["TeamService_teams"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/teams/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["TeamService_teamDetails"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_getAllUsers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_getUser"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/users/{id}/boost": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["User_boostUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/2.0/users/{id}/statistics": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_getUserStatistics"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/3.0/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Authentication_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/3.0/auth/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["Authentication_refreshToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/3.0/my/challenge": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ChallengeService_myChallenge"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/3.0/social/posts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Social_posts"];
        put?: never;
        post: operations["Social_createPost"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/3.0/social/posts/{post_id}/like": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: operations["Social_likePost"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/3.0/user-status": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["User_userStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/4.0/histories/gps": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Activity_activityHistoryList"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/4.0/histories/gps/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["Activity_activityHistory"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ActivityHistory: {
            id: string;
            name: ("Fast walking" | "Run") | string;
            /** Format: uri */
            icon: string;
            /** Format: date-time */
            startAt: string;
            /** Format: date-time */
            endAt: string;
            polylines: string[];
            /** Format: int32 */
            duration: number;
            /** Format: int32 */
            distance: number;
            /** Format: int32 */
            elevation: number;
            /** Format: int32 */
            points: number;
            source: "GARMIN" | string;
            cheat: boolean;
            co2ComparisonSource: "datagir" | string;
            mobilityReason: "Recreational sports" | string;
            isActivityShared: boolean;
            activities: unknown[];
            /** Format: double */
            speed: number;
            /** Format: double */
            pace: number;
            status: "OK" | string;
            externalActivityUrl: unknown;
        };
        ActivityHistoryList: {
            filters: {
                filterBy: "MONTH" | string;
                /** Format: date-time */
                sinceDate: string;
                /** Format: date-time */
                minDatePossible: string;
                /** Format: date-time */
                maxDatePossible: string;
            };
            highlights: {
                name: string;
                /** Format: int32 */
                value: number;
                SIType: string;
            }[];
            activities: {
                id: string;
                name: string;
                /** Format: uri */
                icon: string;
                /** Format: date-time */
                date: string;
                /** Format: int32 */
                duration: number;
                /** Format: int32 */
                distance: number;
                /** Format: int32 */
                points: number;
                status: string;
                command: {
                    name: string;
                    params: {
                        ACTIVITY_ID: string;
                    };
                };
            }[];
        };
        ImageDataMultiPart: {
            /** Format: binary */
            image: string;
        };
        MyChallenge: {
            /** Format: uri */
            spaceImage: string;
            /** Format: uri */
            image: string;
            /** Format: date-time */
            startAt: string;
            /** Format: date-time */
            endAt: string;
            title: string;
            tagline: string;
            description: string;
            statistics: unknown;
            /** Format: date-time */
            deletionDate: string | null;
        };
        RankingMedal: {
            id: string;
            /** Format: int32 */
            minimalRank: number;
            /** Format: uri */
            image: string;
            defaultImage: string;
            color: string;
            description: string;
            name: string;
        };
        RankingTeam: {
            id: string;
            name: string;
            /** Format: int32 */
            points: number;
            /** Format: int32 */
            rank: number;
            /** Format: uri */
            image: string | null;
        };
        SocialPost: {
            id: string;
            createdAt: string;
            updatedAt?: string;
            hasModeratorRole: boolean;
            isPinned: boolean;
            sender: {
                id: string;
                firstName: string;
                lastName: string;
                image?: string;
                teamName: string;
                teamId: string;
            };
            content: {
                isEdited: boolean;
                message?: string;
                images: string[];
                socialtag?: string;
                /** Format: int32 */
                points?: number;
            };
            likes: {
                /** Format: int32 */
                count: number;
                isLikedByUser: boolean;
                images?: string[];
                firstName?: string;
                lastName?: string;
            };
            comments: unknown[];
        };
        SocialTag: {
            id: string;
            /** Format: int32 */
            remaining: number;
            availability: ("WEEKLY" | "DAILY") | string;
            /** Format: int32 */
            occurrence: number;
            /** Format: int32 */
            points: number;
            /** Format: date-time */
            date: string;
            /** Format: uri */
            image: string;
            name: string;
            description: string;
        };
        Team: {
            name: string;
            id: string;
            isDestructible: boolean;
            spaceId: string;
            captainId: string;
            /** Format: uri */
            image: string | null;
            /** Format: int32 */
            rank: number;
            /** Format: int32 */
            totalPoints: number | null;
            users: string[];
            isPrivate: boolean;
        };
        TeamDetails: {
            id: string;
            /** Format: int32 */
            totalPoints: number;
            /** Format: int32 */
            rank: number;
            /** Format: uri */
            image: string | null;
            name: string;
            code: string;
            captainId: string;
            isPrivate: boolean;
            users: {
                id: string;
                /** Format: int32 */
                points: number;
                firstName: string;
                lastName: string;
                /** Format: uri */
                image: string | null;
                isActivityPublic: boolean;
                isCaptain: boolean;
                isBoostable: boolean;
                /** Format: int32 */
                boostCount: number;
            }[];
            /** Format: date-time */
            boostAvailableAt?: string;
        };
        TokenResponse: {
            accessToken: string;
            refreshToken: string;
        };
        UserDetails: {
            id: string;
            firstName: string;
            lastName: string;
            email: string;
            userRole: "user" | string;
            userStatus: components["schemas"]["UserStatus"];
            /** Format: date-time */
            imageUpdatedAt: string;
            isActivityPublic: boolean;
            spaceId: string;
            teamId: string;
            languageCode: "en" | string;
            entityId: string | null;
            platform: "Android" | string;
            platformVersion: string;
            clientVersion: string;
            platformName: string;
            /** Format: date-time */
            lastConnectionDate: string;
            /** Format: date-time */
            consentDataShareDate: string;
            /** Format: date-time */
            consentBasicsDate: string;
            cheatLevel: "CLEAR" | string;
            image: string;
            isCaptain: boolean;
            /** Format: int32 */
            boostCount: number;
        };
        UserStatistics: {
            id: string;
            firstName: string;
            lastName: string;
            entityName: unknown;
            teamName: string;
            teamId: string;
            /** Format: int32 */
            totalPoints: number;
            /** Format: uri */
            image: string | null;
            isActivityPublic: boolean;
            activities: {
                type: ("socialtag" | "quiz" | "mission" | "walk" | "gps") | string;
                /** Format: int32 */
                points: number;
                activityId: ("socialtag" | "quiz" | "mission" | "walk" | "statistic_walk" | "statistic_run" | "active_walk" | "bike") | string;
                /** Format: int32 */
                value: number;
                title: ("statistic_socialtag" | "statistic_quiz" | "statistic_mission" | "statistic_active_walk" | "statistic_bike") | string;
                isHistoryEmpty: boolean;
            }[];
            isBoostable: boolean;
            boostedBy: string[];
            /** Format: int32 */
            boostCount: number;
            boostEndAt: string[];
            isBlocked: boolean;
        };
        /** @enum {string} */
        UserStatus: "OK" | "NEED_UPDATE";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    User_uploadImage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "multipart/form-data": components["schemas"]["ImageDataMultiPart"];
            };
        };
        responses: {
            /** @description The request has succeeded and a new resource has been created as a result. */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": Record<string, never>;
                };
            };
        };
    };
    Ranking_rankingGlobal: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: int32 */
                        rank: number;
                        teams: components["schemas"]["RankingTeam"][];
                        medals: components["schemas"]["RankingMedal"][];
                    };
                };
            };
        };
    };
    Ranking_rankingSeason: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** Format: int32 */
                        rank: number;
                        teams: components["schemas"]["RankingTeam"][];
                        medals: components["schemas"]["RankingMedal"][];
                    };
                };
            };
        };
    };
    TeamService_myTeam: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamDetails"];
                };
            };
        };
    };
    User_user: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDetails"];
                };
            };
        };
    };
    User_updateUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    firstName?: string;
                    lastName?: string;
                    isActivityPublic?: boolean;
                    languageCode?: "en" | string;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        firstName: string;
                        lastName: string;
                        email: string;
                        isActivityPublic: boolean;
                        languageCode: "en" | string;
                        id: string;
                        userRole: "user" | string;
                    };
                };
            };
        };
    };
    Social_getSocialTags: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        ongoing: components["schemas"]["SocialTag"][];
                        upcoming: components["schemas"]["SocialTag"][];
                    };
                };
            };
        };
    };
    TeamService_teams: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Team"][];
                };
            };
        };
    };
    TeamService_teamDetails: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TeamDetails"];
                };
            };
        };
    };
    User_getAllUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        id: string;
                        firstName: string;
                        lastName: string;
                        isPublic: boolean;
                        teamId: string;
                        entityId: unknown;
                        /** Format: int32 */
                        boostCount: number;
                        entityName: unknown;
                        /** Format: uri */
                        image: string | null;
                    }[];
                };
            };
        };
    };
    User_getUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserDetails"];
                };
            };
        };
    };
    User_boostUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    User_getUserStatistics: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserStatistics"];
                };
            };
        };
    };
    Authentication_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    email: string;
                    password: string;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    Authentication_refreshToken: {
        parameters: {
            query?: never;
            header: {
                "refresh-token": string;
            };
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    ChallengeService_myChallenge: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MyChallenge"];
                };
            };
        };
    };
    Social_posts: {
        parameters: {
            query?: {
                sincePostId?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SocialPost"][];
                };
            };
        };
    };
    Social_createPost: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    message: string;
                };
            };
        };
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SocialPost"];
                };
            };
        };
    };
    Social_likePost: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                post_id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
        };
    };
    User_userStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        status: components["schemas"]["UserStatus"];
                    };
                };
            };
        };
    };
    Activity_activityHistoryList: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActivityHistoryList"];
                };
            };
        };
    };
    Activity_activityHistory: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The request has succeeded. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ActivityHistory"];
                };
            };
        };
    };
}
